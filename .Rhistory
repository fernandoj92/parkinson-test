install.packages("viridis")
install.packages("rmarkdown")
install.packages("rmarkdown")
installed.packages()
install.packages("cluster")
installed.packages()
combine(1,2,3)
c(1,2,3)
c(1:3)
"a":"c"
'a':'c'
v = 1:3
v == 3
v equals 3
equals help
help equals
help sum
sum help
help('equals')
help('sum')
help('names')
knitr::opts_chunk$set(echo = TRUE)
numbers = c(1:5)
names(numbers) = c("first", "second", "third", "fourth", "fifth")
numbers
numbers(1)
numbers[1]
barplot(numbers)
a = 1:3
b = 1:4
a+b
a == 2:7
a == 1:5
a == 1:5
a == 2:7
a = 2:5
a = 1:3
a == 2:5
a == 2:4
a == 1
m = matrix(0, 3, 4)
a = 1:15
matrix(a,3,4)
matrix(1:9,3,4)
matrix(1:12,3,4)
m[0,]
m[1,]
m
m[-1,]
m[-11111,]
values <- -10:10
absolutes <- abs(values)
absolutes
data <- read.csv(file="/data/original/jesse_data.csv",head=TRUE,sep=";", na.strings = "")
file.show()
list.files()
data <- read.csv(file="data/original/jesse_data.csv",head=TRUE,sep=";", na.strings = "")
View(data)
View(data)
data[data == ""] <- NA
View(data)
View(data)
data[data == ""] = NA
data
View(data)
data2 = dtaa
data2 = data
data2[data2 == 1] = NA
View(data2)
data2[data2 == 1] = "NA"
View(data2)
data2[data2 == 1] <- "NA"
View(data2)
data2[p == 1] <- "NA"
View(data)
remove(data)
remove(data2)
rm all
clear
rm(list=ls())
data = read.csv("data/original/jesse_data.csv")
data[data == ""] = NA
View(data)
cleanData <- na.omit(data)
write.csv(cleanData, file= "data/original/filtered_data.csv")
View(data)
View(data)
motor_nms = read.csv("data/original/filtered/filtered_motor_and_nms")
motor_nms = read.csv("data/original/filtered/filtered_motor_and_nms.csv")
cleanMotorAndNms =  na.omit(motor_nms)
View(cleanMotorAndNms)
View(motor_nms)
View(motor_nms)
motor_nms[motor_nms == ""] = NA
View(motor_nms)
motor_nms[motor_nms == NA] = "NA"
View(motor_nms)
library(readr)
Motor_and_NMS <- read_csv("~/Git Projects/parkinson-test/data/original/Motor_and_NMS.csv")
View(Motor_and_NMS)
new_motor_nms_filtered = na.omit(Motor_and_NMS)
View(Motor_and_NMS)
write.csv(clearMotorAndNms, file= "data/original/filtered/897_filtered_motor_and_nms.csv")
write.csv(cleanMotorAndNms, file= "data/original/filtered/897_filtered_motor_and_nms.csv")
View(cleanMotorAndNms)
View(cleanMotorAndNms)
filteredMotorNMS = subset(cleanMotorAndNms, select = -c(surgery))
lul = sapply(filteredMotorNMS, mean)
filteredMotorNMS = subset(cleanMotorAndNms, select = -c(study))
lul = sapply(filteredMotorNMS, mean)
print(lul)
ss = do.call(data.frame, list(
mean = sapply(filteredMotorNMS, mean),
sd = sapply(filteredMotorNMS, sd),
median = sapply(filteredMotorNMS, median),
min = sapply(filteredMotorNMS, min),
max = sapply(filteredMotorNMS, max)
))
View(ss)
library(xlsx)
install.packages(xlsx)
install.packages("xlsx")
library(xlsx)
write.xlsx(ss, "C:/Users/equipo/DocumentsGit Projects\parkinson-test\data\original\filtered")
write.xlsx(ss, "C:/Users/equipo/Documents/Git Projects/parkinson-test/data/original/filtered/897_ss.xlsx")
View(cleanData)
ss_cleanData = do.call(data.frame, list(
mean = sapply(cleanData, mean),
sd = sapply(cleanData, sd),
median = sapply(cleanData, median),
min = sapply(cleanData, min),
max = sapply(cleanData, max)
))
View(cleanData)
cleanData_new = subset(cleanData, select = -c(study))
ss_cleanData = do.call(data.frame, list(
mean = sapply(cleanData_new, mean),
sd = sapply(cleanData_new, sd),
median = sapply(cleanData_new, median),
min = sapply(cleanData_new, min),
max = sapply(cleanData_new, max)
))
View(ss_cleanData)
View(ss)
options(scipen=999)
View(ss)
View(ss_cleanData)
write.xlsx(ss_cleanData, "C:/Users/equipo/Documents/Git Projects/parkinson-test/data/original/filtered/781_ss.xlsx")
View(Motor_and_NMS)
View(new_motor_nms_filtered)
View(motor_nms)
motor_nms = subset(motor_nms, select = -c(surgery))
write.xlsx(motor_nms, "C:/Users/equipo/Documents/Git Projects/parkinson-test/data/original/filtered/951_motor_nms.xlsx")
library(readxl)
X951_motor_nms <- read_excel("~/Git Projects/parkinson-test/data/original/filtered/951_motor_nms.xlsx")
View(X951_motor_nms)
View(data)
write.xlsx(data, "C:/Users/equipo/Documents/Git Projects/parkinson-test/data/original/951_jesse_data.xlsx")
rm(list = ls())
library(readr)
X897_motor_nms <- read_csv("~/Git Projects/parkinson-test/data/original/NA values filtered/897_motor_nms.csv")
View(X897_motor_nms)
X897_motor_nms =  subset(X897_motor_nms ,  select = surgery)
rm(list = ls())
library(readr)
X897_motor_nms <- read_csv("~/Git Projects/parkinson-test/data/original/NA values filtered/897_motor_nms.csv")
View(X897_motor_nms)
X897_motor_nms =  subset(X897_motor_nms ,  select = -c(surgery))
write.csv(X897_motor_nms, file = "data/original/NA values filtered/897_motor_nms")
write.csv(X897_motor_nms, file = "data/original/NA values filtered/897_motor_nms.csv")
X897_motor_nms =  subset(X897_motor_nms ,  select = -c(X1))
write.csv(X897_motor_nms, file = "data/original/NA values filtered/897_motor_nms.csv")
write.csv(X897_motor_nms, file = "data/original/NA values filtered/897_motor_nms.csv")
df1 = data.frame(x = runif(100), y=runif(100))
plot(df1)
km = kmeans(df1, centers = 3, nstart = 20)
kmRes = factor(km$cluster)
s.class(df1,fac=kmeansRes, add.plot=TRUE, col=rainbow(nlevels(kmeansRes)))
library(ade4)
install.packages("ade4")
library(ade4)
s.class(df1,fac=kmeansRes, add.plot=TRUE, col=rainbow(nlevels(kmeansRes)))
s.class(df1,fac=kmRes, add.plot=TRUE, col=rainbow(nlevels(kmeansRes)))
s.class(df1,fac=kmRes, add.plot=TRUE, col=rainbow(nlevels(kmRes)))
View(df1)
View(df1)
df1$cluster = km$cluster
rm(list = ls())
library(readr)
X897_nms_noCISI_cluster <- read_csv("~/Git Projects/parkinson-test/analysis/clustering/kmeans/data/897_nms_noCISI_cluster.csv")
View(X897_nms_noCISI_cluster)
897_nms30_gap = clusGap(X897_nms_noCISI_cluster, FUN=kmeans, B=500)
X897_nms30_gap = clusGap(X897_nms_noCISI_cluster, FUN=kmeans, B=500)
library(cluster)
X897_nms30_gap = clusGap(X897_nms_noCISI_cluster, FUN=kmeans, B=500)
X897_nms30_gap = clusGap(X897_nms_noCISI_cluster, FUN=kmeans, B=500, K.max = 10)
x897_nms_30 = subset(X897_nms_noCISI_cluster, c(8:37))
x897_nms_30 = X897_nms_noCISI_cluster[8:37]
View(x897_nms_30)
X897_nms30_gap = clusGap(x897_nms_30, FUN=kmeans, B=500, K.max = 10)
X897_nms30_gap = clusGap(x897_nms_30, FUNcluster = kmeans(iter.max = 30), B=500, K.max = 10)
help(kmeans)
X897_nms30_gap = clusGap(x897_nms_30, FUNcluster = kmeans(x = x897_nms_30, iter.max = 30), B=500, K.max = 10)
X897_nms30_gap = clusGap(x897_nms_30, FUNcluster = kmeans(x = x897_nms_30, iter.max = 30, centers = 20), B=500, K.max = 10)
X897_nms30_gap = clusGap(x897_nms_30, FUN = kmeans(x = x897_nms_30, iter.max = 30, centers = 20), B=500, K.max = 10)
X897_nms30_gap = clusGap(x897_nms_30, FUNcluster = kmeans(iter.max = 30), B=500, K.max = 10)
X897_nms30_gap = clusGap(x897_nms_30, B=500, K.max = 10)
X897_nms30_gap = clusGap(x897_nms_30, FUNcluster = kmeans(iter.max = 30L), B=500, K.max = 10)
X897_nms30_gap = clusGap(x897_nms_30, FUN=kmeans, B=500, K.max = 10, n.start = 20)
X897_nms30_gap = clusGap(x897_nms_30, FUN=kmeans, B=500, K.max = 10, nstart = 20)
warnings()
X897_nms30_gap = clusGap(x897_nms_30, FUN=kmeans, B=500, K.max = 10, nstart = 20, iter.max=30)
print(X897_nms30_gap, method="firstmax")
plot(X897_nms30_gap, frame =false, xlab = "Number of clusters k")
fviz_gap_stat(X897_nms30_gap)
library(factoextra)
install.packages(factoextra)
install.packages("factoextra")
library(factoextra)
fviz_gap_stat(X897_nms30_gap)
print(X897_nms30_gap, "Tibs2001SEmax")
print(X897_nms30_gap, "firstSEmax")
print(X897_nms30_gap, "globalSEmax")
X897_nms30_elbow = fviz_nbclust(x897_nms_30, FUN=kmeans, B=500, K.max = 10, nstart = 20, iter.max=30)
X897_nms30_elbow = fviz_nbclust(x897_nms_30, FUN=kmeans, B=500, k.max = 10, nstart = 20, iter.max=30)
help("fviz_nbclust")
X897_nms30_silhouette = fviz_nbclust(x897_nms_30, FUN=kmeans, method = "silhouette", nboot=500, k.max = 10, nstart = 20, iter.max=30)
print(X897_nms30_silhouette)
X897_nms30_silhouette = fviz_nbclust(x897_nms_30, FUN=kmeans, method = "wss", nboot=500, k.max = 10, nstart = 20, iter.max=30)
print(X897_nms30_silhouette)
X897_nms30_elbow = X897_nms30_silhouette
X897_nms30_silhouette = fviz_nbclust(x897_nms_30, FUN=kmeans, method = "sihouette", nboot=500, k.max = 10, nstart = 20, iter.max=30)
X897_nms30_silhouette = fviz_nbclust(x897_nms_30, FUN=kmeans, method = "silhouette", nboot=500, k.max = 10, nstart = 20, iter.max=30)
print(X897_nms30_silhouette)
x897_nms3_kmeans2 = kmeans(x897_nms_30, centers = 2, iter.max = 30, nstart = 20)
print(x897_nms3_kmeans2)
x897_nms3_kmeans3 = kmeans(x897_nms_30, centers = 3, iter.max = 30, nstart = 20)
x897_nms3_kmeans4 = kmeans(x897_nms_30, centers = 4, iter.max = 30, nstart = 20)
print(x897_nms3_kmeans3)
print(x897_nms3_kmeans4)
x897_nms3_kmeans10 = kmeans(x897_nms_30, centers = 10, iter.max = 30, nstart = 20)
print(x897_nms3_kmeans10)
x897_nms3_kmeans12 = kmeans(x897_nms_30, centers = 12, iter.max = 30, nstart = 20)
print(x897_nms3_kmeans12)
fviz_gap_stat(X897_nms30_gap)
fviz_gap_stat(X897_nms30_gap, maxSE = "Tibbs2001SEmax)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(out.width='350px', dpi=200)
fviz_gap_stat(X897_nms30_gap, maxSE = "Tibbs2001SEmax")
print(x897_nms3_kmeans2)
x897_nms_30_kmeans2 = X897_nms_noCISI_cluster
x897_nms_30_kmeans2$cluster = x897_nms3_kmeans2$cluster
View(x897_nms_30_kmeans2)
x897_nms_30_kmeans3 = X897_nms_noCISI_cluster
x897_nms_30_kmeans4 = X897_nms_noCISI_cluster
x897_nms_30_kmeans3$cluster = x897_nms3_kmeans3$cluster
x897_nms_30_kmeans4$cluster = x897_nms3_kmeans4$cluster
write.csv(x = x897_nms_30_kmeans2, "analysis/clustering/kmeans/K = 2/897_nms30_kmeans2.csv")
write.csv(x = x897_nms_30_kmeans3, "analysis/clustering/kmeans/K = 3/897_nms30_kmeans3.csv")
write.csv(x = x897_nms_30_kmeans4, "analysis/clustering/kmeans/K = 4/897_nms30_kmeans4.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(out.width='350px', dpi=200)
x897_nms30_kmeans234 = list(x897_nms_30_kmeans2, x897_nms_30_kmeans3, x897_nms_30_kmeans4)
filtered_nms30_kmeans234 = list()
for(i in 1:length(x897_nms30_kmeans234)){
filtered_nms30_kmeans234 = x897_nms30_kmeans234[[i]][3:37]
}
View(filtered_nms30_kmeans234)
rm(filtered_nms30_kmeans234)
x897_nms30_kmeans234 = list(x897_nms_30_kmeans2, x897_nms_30_kmeans3, x897_nms_30_kmeans4)
filtered_nms30_kmeans234 = list()
for(i in 1:length(x897_nms30_kmeans234)){
filtered_nms30_kmeans234 = x897_nms30_kmeans234[[i]][3:37, 98]
}
View(filtered_nms30_kmeans234)
x897_nms30_kmeans234 = list(x897_nms_30_kmeans2, x897_nms_30_kmeans3, x897_nms_30_kmeans4)
filtered_nms30_kmeans234 = list()
for(i in 1:length(x897_nms30_kmeans234)){
filtered_nms30_kmeans234 = x897_nms30_kmeans234[[i]][c(3:37, 98)]
}
View(filtered_nms30_kmeans234)
x897_nms30_kmeans234 = list(x897_nms_30_kmeans2, x897_nms_30_kmeans3, x897_nms_30_kmeans4)
filtered_nms30_kmeans234 = list()
for(i in 1:length(x897_nms30_kmeans234)){
filtered_nms30_kmeans234[[i]] = x897_nms30_kmeans234[[i]][c(3:37, 98)]
}
rm(i)
filtered_nms30_kmeans234[[3]]
View(x897_nms_30_kmeans2)
library(readr)
X897_motor_nms_cluster <- read_csv("~/Git Projects/parkinson-test/analysis/clustering/kmeans/data/897_motor_nms_cluster.csv")
View(X897_motor_nms_cluster)
View(X897_motor_nms_cluster)
View(X897_motor_nms_cluster)
ggplot(data = df.team_data, aes(x = metrics, y = teams)) +
geom_tile(aes(fill = performance))
drawHeatmap
print(x897_nms3_kmeans2$centers)
print(x897_nms3_kmeans3$centers)
print(x897_nms3_kmeans$centers)
print(x897_nms3_kmeans4$centers)
heat_map_matrix = x897_nms3_kmeans3$centers
View(heat_map_matrix)
heat_map_data = x897_nms3_kmeans3$centers
heat_map_matrix = data.matrix(heat_map_data)
View(heat_map_matrix)
rm(heat_map_data)
kmeans3_heatmap = heatmap(heat_map_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
kmeans3_heatmap = heatmap(heat_map_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(25,40))
kmeans3_heatmap = heatmap(heat_map_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,5))
kmeans3_heatmap = heatmap(heat_map_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
kmeans3_heatmap = heatmap(heat_map_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,5))
kmeans3_heatmap = heatmap(heat_map_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
rm(kmeans3_heatmap)
kmeans3_heatmap = heatmap(heat_map_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,5))
kmeans3_heatmap = heatmap(heat_map_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
dev.off
dev.off()
kmeans3_heatmap = heatmap(heat_map_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
heat_map_data = x897_nms3_kmeans4$centers
kmeans3_heatmap = heatmap(heat_map_data, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
heat_map_data = x897_nms3_kmeans10$centers
kmeans3_heatmap = heatmap(heat_map_data, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
heat_map_data = x897_nms3_kmeans2$centers
kmeans3_heatmap = heatmap(heat_map_data, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
kmeans3_heatmap = heatmap(heat_map_data, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
View(x897_nms_30_kmeans2)
View(X897_motor_nms_cluster)
x897_motor21 = X897_motor_nms_cluster[c(8:32)]
View(x897_motor21)
x897_motor25 = x897_motor21
rm(x897_motor21)
View(x897_motor25)
d897_motor25_gap = clusGap(x897_motor25, FUN=kmeans, B=500, K.max = 10, nstart = 20, iter.max=30)
library(cluster)
d897_motor25_gap = clusGap(x897_motor25, FUN=kmeans, B=500, K.max = 10, nstart = 20, iter.max=30)
print(d897_motor25_gap)
print(d897_motor25_gap, "Tibbs2001SEmax")
print(d897_motor25_gap, "Tibs2001SEmax")
plot(d897_motor25_gap, frame = FALSE, xlab = "Number of clusters k")
plot(X897_nms30_gap, frame = FALSE, xlab = "Number of clusters k")
Kmeans_models_motor25 = vector("list", 3)
for(i in 1:length(Kmeans_models_motor25)){
Kmeans_models_motor25[[i]] = kmeans(x = x897_motor25, centers = i+1, iter.max = 30, nstart = 20)
}
heat_map_motor_data = Kmeans_models_motor25$centers
heat_map_motor_data = Kmeans_models_motor25[[1]]$centers
View(heat_map_motor_data)
for(i in 1:length(Kmeans_models_motor25)){
+     Kmeans_models_motor25[[i]] = kmeans(x = x897_motor25, centers = i+1, iter.max = 30, nstart = 20)}
for(i in 1:length(Kmeans_models_motor25)){
Kmeans_models_motor25[[i]] = kmeans(x = x897_motor25, centers = i+2, iter.max = 30, nstart = 20)}
heat_map_motor_data = Kmeans_models_motor25[[1]]$centers
View(heat_map_motor_data)
kmeans_3_motor_heatmap = heatmap(heat_map_motor_data, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
heat_map_motor_data = Kmeans_models_motor25[[2]]$centers
kmeans_motor_heatmap = heatmap(heat_map_motor_data, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
heat_map_motor_data = Kmeans_models_motor25[[3]]$centers
kmeans_motor_heatmap = heatmap(heat_map_motor_data, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
